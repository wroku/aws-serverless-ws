service: serverlessws

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  profile: serverlessUser
  region: eu-central-1
  environment:
    tableName: ${self:custom.tableName}
    animationTime: ${self:custom.animationTime}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: '*'
      
custom:
  tableName: WebSocketUsers
  animationTime: 3000

functions:
  websocket-connect:
    handler: lambdas/websockets/connect.handler
    events:
      - websocket:
          route: $connect
  websocket-disconnect:
    handler: lambdas/websockets/disconnect.handler
    events:
      - websocket:
          route: $disconnect
  websocket-default:
    handler: lambdas/websockets/default.handler
    events:
      - websocket:
          route: $default             
  websocket-message:
      handler: lambdas/websockets/message.handler
      events:
        - websocket:
            route: message
  websocket-createGame:
      handler: lambdas/websockets/createGame.handler
      events:
        - websocket:
            route: createGame
  websocket-joinGame:
      handler: lambdas/websockets/joinGame.handler
      events:
        - websocket:
            route: joinGame
  websocket-startGame:
      handler: lambdas/websockets/startGame.handler
      events:
        - websocket:
            route: startGame
  websocket-lobbyInfo:
      handler: lambdas/websockets/lobbyInfo.handler
      events:
        - websocket:
            route: lobbyInfo
  websocket-failedSelect:
      handler: lambdas/websockets/failedSelect.handler
      events:
        - websocket:
            route: failedSelect
  websocket-selectSet:
      handler: lambdas/websockets/selectSet.handler
      events:
        - websocket:
            route: selectSet
  websocket-noSet:
      handler: lambdas/websockets/noSet.handler
      events:
        - websocket:
            route: noSet
  websocket-leaveGame:
      handler: lambdas/websockets/leaveGame.handler
      events:
        - websocket:
            route: leaveGame
  
resources:
  Resources:
    WebSocketUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: ID
            AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        ProvisionedThroughput:
              ReadCapacityUnits: 15
              WriteCapacityUnits: 15   
#    wss://qhurwv53tk.execute-api.eu-central-1.amazonaws.com/dev
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
